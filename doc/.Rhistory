# print(sum(prob_rating[1,2,])) #c,j,k
}
prob_class
prob_rating
# prob_rating[1,1,1]
load("../data/ms_UI.RData")
load("../data/movies_UI.RData")
# same as above, ugly code
movies_UI <- movies_UI[1:4,1:8]
non_na_columns = matrix(TRUE, 8)
for (j in 1:8){
if (all(is.na(movies_UI[,j]))){
non_na_columns[j] = FALSE
}
}
movies_UI <- movies_UI[,which(non_na_columns)]
movies_UI
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:1){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
C <- 3 # number of classes, will be tuned later
# n_users <- max(as.numeric(rownames(movies_UI)))
n_users <- dim(movies_UI)[1]
n_items <- dim(movies_UI)[2]
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:1){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
prob_class
prob_rating
# prob_rating[1,1,1]
sum(prob_rating[1,1,])
sum(prob_rating[1,2,])
for (c in 1:C){
for (j in 1:n_items){
print(sum(prob_rating[c,j,]))
}
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
prob_class
prob_rating
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
print(prob_class)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
prob_class
prob_rating
for (c in 1:C){
for (j in 1:n_items){
print(sum(prob_rating[c,j,]))
}
}
# prob_rating[1,1,1]
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
print(prob_class)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
# print(prob_class)
print(prob_rating)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
denominator <- sum(assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
print(denominator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
denominator <- sum(assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
# print(denominator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
denominator <- sum(assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
print(c(c,j,k))
print(denominator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
print(c(c,j))
print(users_who_rated_item_j)
denominator <- sum(assignment[users_who_rated_item_j,c])
print(denominator)
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
print('---------')
print(c(c,j))
print(users_who_rated_item_j)
denominator <- sum(assignment[users_who_rated_item_j,c])
print(denominator)
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
# print('---------')
# print(c(c,j))
# print(users_who_rated_item_j)
denominator <- sum(assignment[users_who_rated_item_j,c])
# print(denominator)
for(k in 1:6){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
# print('num:')
# print(numerator)
prob_rating[c,j,k] <- numerator/denominator
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
print(assignment)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
update_prob_class <- function(prob_class, assignment){
for (c in 1:C){
prob_class[c,] <- sum(assignment[!is.na(assignment[,c]),c])/n_users
}
return(prob_class)
}
update_prob_rating <- function(prob_rating, assignment)
for (c in 1:C){
for (j in 1:n_items){
users_who_rated_item_j <- which(!is.na(movies_UI[,j]))
# print('---------')
# print(c(c,j))
# print(users_who_rated_item_j)
denominator <- sum(assignment[users_who_rated_item_j,c])
# warning: denominator can be = 0 ! (if prob_class got to 0 for class c at previous step)
# print(denominator)
for(k in 1:6){
if (denominator != 0){
numerator <- sum((movies_UI[users_who_rated_item_j,j] == k) * assignment[users_who_rated_item_j,c])
prob_rating[c,j,k] <- numerator/denominator
} else{
prob_rating[c,j,k] <- 0
}
}
}
return(prob_rating)
}
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:2){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
print(assignment)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:4){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
print(assignment)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
# prob_class
# prob_rating
#
# for (c in 1:C){
#   for (j in 1:n_items){
#     print(sum(prob_rating[c,j,]))
#   }
# }
# prob_rating[1,1,1]
prob_class
prob_rating
load("../data/ms_UI.RData")
# same as above, ugly code
movies_UI <- movies_UI[1:500,1:200]
load("../data/ms_UI.RData")
load("../data/movies_UI.RData")
# same as above, ugly code
movies_UI <- movies_UI[1:500,1:200]
non_na_columns = matrix(TRUE, 200)
for (j in 1:200){
if (all(is.na(movies_UI[,j]))){
non_na_columns[j] = FALSE
}
}
movies_UI <- movies_UI[,which(non_na_columns)]
C <- 3 # number of classes, will be tuned later
# n_users <- max(as.numeric(rownames(movies_UI)))
n_users <- dim(movies_UI)[1]
n_items <- dim(movies_UI)[2]
prob_class <- matrix(1/C, nrow=C)
prob_rating <- array(1/6, dim=c(C, n_items, 6))
assignment <- matrix(NA, nrow=n_users, ncol=C)
for (i in 1:10){
# E:
assignment <- update_assignment(assignment, prob_class, prob_rating)
print(assignment)
# M:
prob_class <- update_prob_class(prob_class, assignment)
prob_rating <- update_prob_rating(prob_rating, assignment)
# print(assignment)
# print(sum(prob_class))
# print(sum(prob_rating[1,2,])) #c,j,k
}
0 != 1
